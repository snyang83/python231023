import pygame
import random

# 초기화
pygame.init()

# 화면 설정
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("블록 깨기 게임")

# 색깔
white = (255, 255, 255)
blue = (0, 0, 255)
red = (255, 0, 0)

# 패들 설정
paddle_width = 100
paddle_height = 10
paddle_x = (screen_width - paddle_width) // 2
paddle_y = screen_height - paddle_height - 10
paddle_speed = 5  # 더 느린 속도로 변경

# 공 설정
ball_radius = 10
ball_x = random.randint(ball_radius, screen_width - ball_radius)
ball_y = paddle_y - ball_radius * 2
ball_speed_x = 2  # 더 느린 속도로 변경
ball_speed_y = -2  # 더 느린 속도로 변경
ball = pygame.Rect(ball_x, ball_y, ball_radius * 2, ball_radius * 2)

# 블록 설정
block_width = 60
block_height = 20
blocks = []
for row in range(4):
    for col in range(10):
        block_x = col * (block_width + 5) + 70
        block_y = row * (block_height + 5) + 50
        blocks.append(pygame.Rect(block_x, block_y, block_width, block_height))

# 게임 루프
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        paddle_x -= paddle_speed
    if keys[pygame.K_RIGHT]:
        paddle_x += paddle_speed

    ball.x += ball_speed_x
    ball.y += ball_speed_y

    # 벽과 패들과의 충돌 처리
    if ball.left <= 0 or ball.right >= screen_width:
        ball_speed_x = -ball_speed_x
    if ball.colliderect(pygame.Rect(paddle_x, paddle_y, paddle_width, paddle_height)):
        ball_speed_y = -ball_speed_y

    # 블록과의 충돌 처리
    for block in blocks[:]:
        if ball.colliderect(block):
            blocks.remove(block)
            ball_speed_y = -ball_speed_y

    # 게임 오버 처리
    if ball.top <= 0:
        ball_speed_y = -ball_speed_y
    if ball.bottom >= screen_height:
        running = False

    screen.fill(white)
    pygame.draw.rect(screen, blue, (paddle_x, paddle_y, paddle_width, paddle_height))
    pygame.draw.circle(screen, red, (ball.x + ball_radius, ball.y + ball_radius), ball_radius)
    for block in blocks:
        pygame.draw.rect(screen, blue, block)
    pygame.display.flip()

pygame.quit()
